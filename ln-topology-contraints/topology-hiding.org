#+TITLE: Topological Constraints on Route Obfuscation in the Bitcoin Lightning Network
#+EMAIL: <rusty@blockstream.com>

* Abstract

This paper attempts to measure the potential for hiding the source and
destination of payments through the Bitcoin Lightning Network, by
looking at a snapshot of the current network topology which constrains
them.  We conclude that there are no significant topological constraints
to route obfuscation, with the exception of single-channel nodes.

* Introduction

The Lightning Network uses source routing with a Sphinx-based onion
format \cite{Sphinx}.  This naturally leads to comparison with
successful mixnets such as Tor, but the routing of payments through
channels constrains the topology such that it's necessary to ask how
effective the anonymity provided is.

It is unavoidable that each node on the route knows the previous and
next nodes, so it is worth assessing at the simplest level what nodes
could have possibly been the source and destination.

A future paper will build on this and assess what nodes are the likely
source and destination using knowledge of the routing algorithms
themselves, but for the moment we only consider the base topological
constraint: that two nodes can only route a payment between them if
they have a channel.

* Evaluation Network
  
We use a snapshot of the lightning network taken on 2020-07-27,
removed 11 channels which charged more than 100% (due to limits of our
internal fee representation), eliminated channels which not enabled
in both directions, and nodes which were not reachable from the first
node which gave 2801 nodes and 20899 channels.

Note that the requirement that a channel be enabled in *both*
directions was surprising to us: without this requirement there is a
signficant asymmetry in the apparent reachable destinations (vs. the
potential sources).  This is because peers signal the availabilty of
their *outgoing* channels (which is how they charge fees, thus having
to indicate their current feerate).  Thus online nodes will mark their
channels to offline nodes as disabled, but offline nodes obviously
won't indicate that the other direction is disabled.  Well-connected
nodes tend to be reliable, and less-connected nodes less so, meaning a
naive interpretation of the channel graph leads one to believe that
reaching a well-connected node is far easier than leaving it, whereas
in fact if either side indicates a channel is disabled, the entire
channel is likely disabled.

We simulate two cases:

1. Every node trying to reach 5 common vendor nodes.  This is presumed to
   reflect the bulk of common transactions.
2. Every node trying to reach 5 single-channel nodes.  This reflects a
   more peer-to-peer payment pattern.

The five vendor nodes we chose:
1. bitrefill.com/giftcards: 030c3f19d742ca294a55c00376b3b355c3c90d61c6b6b39554dbc7ac19b141c14f
2. Blockstream Store: 02df5ffe895c778e10f7742a6c5b8a0cefbe9465df58b92fadeb883752c8107c8f
3. tippin.me: 03c2abfa93eacec04721c019644584424aab2ba4dff3ac9bdab4e9c97007491dda
4. opennode.com: 03abf6f44c355dec0d5aa155bdbdd6e0c8fefe318eff402de65c6eb2e1be55dc3e
5. walletofsatoshi.com: 02004c625d622245606a1ea2c1c69cfb4516b703b47945a3647713c05fe4aaeb1c

We chose the 5 lexographically-first nodes which had only a single channel:
1. 02001828ca7eb8e44d4d78b5c1ea609cd3744be823c22cd69d895eff2f9345892d
2. 020177ac03d9e75d6190dfa147e9cb3e5905a2e02048151f1fc9cc5a72a3cd60f0
3. 0201fa3eccc87826765f52afc5906d90a6c3598f49f3e0a9d90d612597c37a2fd5
4. 0202e6bffec1e453d3cd93917d65544a7a87c88f1a6c52ed827a3cb7157bb06e93
5. 020328dfec863a339a91f16e50082768b97f87abbbe7b7b9dd2a150d0b0409b49f

** Evaluating a Particular Route

We first determined the minimum cost route from each source node to
the destination (for our five vendors mean path length is 2.75 maximum 7,
and for our five peers, the mean is 3.73, maximum 8).

Then for each node after the first on that route, measure the set of
/topologically possible/ sources.  /Topologically possible/ means that
there is a path leading to the predecessor node which is less than 18
hops long (19 if this node is the destination) where all channels are
enabled in that direction, and would not pass through this node
already.

This reflects the default maximum path length of 20 hops, since each
node knows if there is a sucessor or not.  Note that we ignore
capacity limits.

Similarly, for each node before the last, measure the set of
/topologically possible/ destinations.

Since each node knows that it isn't the source or destination, the
ideal value is 2800.

** Results

For both sets of destination nodes, we indicate the mean topologically
possible set size for each hop of each path length.

*** Major Vendor Destinations:

  Path length 1: (1124 nodes)
  - source set size node 1/1: 2719.81
  - destination set size node 0/1: 2799.19

  Path length 2: (5029 nodes)
  - source set size node 1/2: 2299.85
  - source set size node 2/2: 2792.67
  - destination set size node 0/2: 2799.57
  - destination set size node 1/2: 2788.23

  Path length 3: (4976 nodes)
  - source set size node 1/3: 1589
  - source set size node 2/3: 2789.66
  - source set size node 3/3: 2793.67
  - destination set size node 0/3: 2799.86
  - destination set size node 1/3: 2754.88
  - destination set size node 2/3: 2798.05

  Path length 4: (1983 nodes)
  - source set size node 1/4: 1856.17
  - source set size node 2/4: 2757.68
  - source set size node 3/4: 2798.35
  - source set size node 4/4: 2797.23
  - destination set size node 0/4: 2799.77
  - destination set size node 1/4: 2782.85
  - destination set size node 2/4: 2791.68
  - destination set size node 3/4: 2798.35
  
  Path length 5: (646 nodes)
  - source set size node 1/5: 811.944
  - source set size node 2/5: 2765.27
  - source set size node 3/5: 2791.79
  - source set size node 4/5: 2799.72
  - source set size node 5/5: 2799.32
  - destination set size node 0/5: 2799.74
  - destination set size node 1/5: 2732.92
  - destination set size node 2/5: 2795.35
  - destination set size node 3/5: 2791.79
  - destination set size node 4/5: 2799.72

  Path length 6: (170 nodes)
  - source set size node 1/6: 17.4647
  - source set size node 2/6: 2655.29
  - source set size node 3/6: 2797.62
  - source set size node 4/6: 2788.92
  - source set size node 5/6: 2799.92
  - source set size node 6/6: 2799.76
  - destination set size node 0/6: 2799.99
  - destination set size node 1/6: 2683.55
  - destination set size node 2/6: 2767.24
  - destination set size node 3/6: 2797.62
  - destination set size node 4/6: 2788.92
  - destination set size node 5/6: 2799.92

  Path length 7: (2 nodes)
  - source set size node 1/7: 1
  - source set size node 2/7: 1400.5
  - source set size node 3/7: 2783
  - source set size node 4/7: 2792
  - source set size node 5/7: 2793.5
  - source set size node 6/7: 2799.5
  - source set size node 7/7: 2798
  - destination set size node 0/7: 2800
  - destination set size node 1/7: 2799
  - destination set size node 2/7: 2729
  - destination set size node 3/7: 2783
  - destination set size node 4/7: 2792
  - destination set size node 5/7: 2793.5
  - destination set size node 6/7: 2799.5

*** Peer to Peer Destinations:

  Path length 1: (5 nodes)
  - source set size node 1/1: 2800
  - destination set size node 0/1: 1

  Path length 2: (1068 nodes)
  - source set size node 1/2: 1081.84
  - source set size node 2/2: 2800
  - destination set size node 0/2: 2799.36
  - destination set size node 1/2: 1

  Path length 3: (4963 nodes)
  - source set size node 1/3: 2404.77
  - source set size node 2/3: 2668.28
  - source set size node 3/3: 2800
  - destination set size node 0/3: 2799.68
  - destination set size node 1/3: 2773.18
  - destination set size node 2/3: 1

  Path length 4: (5113 nodes)
  - source set size node 1/4: 1957.56
  - source set size node 2/4: 2780.88
  - source set size node 3/4: 2663.56
  - source set size node 4/4: 2800
  - destination set size node 0/4: 2799.77
  - destination set size node 1/4: 2781.03
  - destination set size node 2/4: 2782.44
  - destination set size node 3/4: 1

  Path length 5: (2177 nodes)
  - source set size node 1/5: 1291.49
  - source set size node 2/5: 2750.71
  - source set size node 3/5: 2771.79
  - source set size node 4/5: 2667.91
  - source set size node 5/5: 2800
  - destination set size node 0/5: 2799.87
  - destination set size node 1/5: 2765.94
  - destination set size node 2/5: 2784.86
  - destination set size node 3/5: 2771.79
  - destination set size node 4/5: 1

  Path length 6: (534 nodes)
  - source set size node 1/6: 1390.26
  - source set size node 2/6: 2732.93
  - source set size node 3/6: 2796.74
  - source set size node 4/6: 2794.43
  - source set size node 5/6: 2682.78
  - source set size node 6/6: 2800
  - destination set size node 0/6: 2799.88
  - destination set size node 1/6: 2787.05
  - destination set size node 2/6: 2795.22
  - destination set size node 3/6: 2796.74
  - destination set size node 4/6: 2794.43
  - destination set size node 5/6: 1

  Path length 7: (69 nodes)
  - source set size node 1/7: 243.203
  - source set size node 2/7: 2625.91
  - source set size node 3/7: 2794.57
  - source set size node 4/7: 2799.61
  - source set size node 5/7: 2799.36
  - source set size node 6/7: 2714.13
  - source set size node 7/7: 2800
  - destination set size node 0/7: 2799.97
  - destination set size node 1/7: 2787.64
  - destination set size node 2/7: 2787.77
  - destination set size node 3/7: 2794.57
  - destination set size node 4/7: 2799.61
  - destination set size node 5/7: 2799.36
  - destination set size node 6/7: 1

  Path length 8: (2 nodes)
  - source set size node 1/8: 1
  - source set size node 2/8: 2786.5
  - source set size node 3/8: 2785
  - source set size node 4/8: 2799
  - source set size node 5/8: 2800
  - source set size node 6/8: 2800
  - source set size node 7/8: 2717
  - source set size node 8/8: 2800
  - destination set size node 0/8: 2800
  - destination set size node 1/8: 2799
  - destination set size node 2/8: 2786.5
  - destination set size node 3/8: 2785
  - destination set size node 4/8: 2799
  - destination set size node 5/8: 2800
  - destination set size node 6/8: 2800
  - destination set size node 7/8: 1

** Interpretation

Nodes which have a single channel connection to the network are
expected to get topological set size of 1 from their peers: you can
see that the destination topology of the penultimate peer is always 1
for the singly-connected peers in the "peer to peer" payment set.

If we eliminate the 822 singly-connected nodes from the sources in the
"vendor" set, we get much closer to the ideal (now 1978) for the first
hops:

Path length 1: (1096 nodes)
- source set size node 1/1: 1976.01

Path length 2: (4139 nodes)
- source set size node 1/2: 1943.09

Path length 3: (3170 nodes)
- source set size node 1/3: 1901.92

Path length 4: (1330 nodes)
- source set size node 1/4: 1888.46

Path length 5: (110 nodes)
- source set size node 1/5: 1582.31

Path length 6: (1 nodes)
- source set size node 1/6: 1978

* Furthur Work

Now we have demonstrated that it's possible that route obfuscation can
be effective, the next steps are to measure how effective the current
"minimum cost" routing is, and what effective modifications might be.

In addition, using extrapolated toplogies like \cite{1} could indicate
the degree to which the topologically ideals are maintained as the
network grows.

* Conclusion

The lightning network is currently highly-connected, and as a result
has short path lengths, median 3 for all nodes, with a median 2 for
prominent destinations.

For singly connected nodes, the first hop on a route knows the source
with certainty, but for hops beyond that obfuscation techniques should
be almost ideally effective.  For dual-or-better connected nodes,
there are no significant topological restrictions which would allow
simple determination of source or destination at any point along the
payment path.
